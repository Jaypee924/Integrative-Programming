1. What are the main differences between XMLHttpRequest and Fetch API?
The differences between XMLHttpRequest and Fetch API: The XMLHttp uses early callback-based code that is more complex for this generation. On the other hand, the Feth API is more modern that's making the code neat, easier to comprehend, and flexible to use and for this era.

2. Why is the Fetch API considered more modern and readable?
It is considered more modern and easier to comprehend for the reason that it uses Promises instead of callbacks. It allows you to code far more simpler and neat that flows naturally.

3. What is the purpose of the .then() and .catch() methods in Fetch?
The .then() method runs after the request is successful — it handles what to do with the data once it’s received. The .catch() method runs if there’s an error — for example, if the network fails or the server can’t be reached. Together, they make it easy to manage success and error cases in a clean way.

4. What happens when you send a POST request to the placeholder API?
When you send a POST request to the placeholder API (like https://jsonplaceholder.typicode.com/posts
), it doesn’t actually save the data since it’s a fake test API. Instead, it returns a response showing the data you sent, along with a newly generated ID, as if a new record was created — just for demonstration purposes.
